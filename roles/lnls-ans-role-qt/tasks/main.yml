---
- name: Resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      ignore_errors: true
      paths:
        - '{{ role_path }}/vars'

- name: Define Qt5 packages
  set_fact:
    qt_distro_packages: "{{ __qt_distro_packages | list }}"
  when: qt_distro_packages is not defined

- name: Define Python executable
  set_fact:
    python_executable: "{{ __python_executable | default('python') }}"
  when: python_executable is not defined

- name: Define PIP executable
  set_fact:
    pip_executable: "{{ __pip_executable | default(omit) }}"
  when: pip_executable is not defined

- name: Define PIP Qt5 packages
  set_fact:
    qt_pip_packages: "{{ __qt_pip_packages | list }}"
  when: qt_pip_packages is not defined

- name: Define Qt install from source
  set_fact:
    qt_install_from_src: "{{ __qt_install_from_src | default(false) }}"
  when: qt_install_from_src is not defined

- name: Define Qt version reduced
  set_fact:
    qt_src_version_reduced: "{{ qt_src_version | regex_replace('(\\d+\\.\\d+).*$', '\\1') }}"

- name: Define Qt version noninteractive
  set_fact:
    qt_src_version_noninteractive: "{{ qt_src_version | regex_replace('(\\d+)\\.(\\d+)\\.(\\d+).*$', '\\1\\2\\3') }}"

- name: Check which qt version is installed
  shell: |
    set -o pipefail
    qmake --version | grep -oP "(?<=Qt version )[0-9]+\.[0-9]+\.[0-9]+"
  args:
    executable: /bin/bash
  register: qt_check_result
  failed_when: false
  changed_when: false
  check_mode: false

- name: Define PyQt dependency packages
  set_fact:
    pyqt_dep_packages: "{{ __pyqt_dep_packages | list }}"
  when: pyqt_dep_packages is not defined

- name: Define Qt dependency packages
  set_fact:
    qt_dep_packages: "{{ __qt_dep_packages | list }}"
  when: qt_dep_packages is not defined

- name: Define dependency packages
  set_fact:
    dep_packages: "{{ pyqt_dep_packages + qt_dep_packages }}"

- name: Define pyQt install from source
  set_fact:
    pyqt_install_from_src: "{{ __pyqt_install_from_src | default(false) }}"
  when: pyqt_install_from_src is not defined

- name: Check which pyqt version is installed
  shell: |
    set -o pipefail
    {{ pip_executable }} freeze | grep -oP "(?<=PyQt5==)[0-9]+\.[0-9]+\.[0-9]+"
  args:
    executable: /bin/bash
  register: pyqt_check_result
  failed_when: false
  changed_when: false
  check_mode: false

# Include Tasks

- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Qt from source
  block:
    - include_tasks: remove-qt-from-apt.yml
    - include_tasks: install-qt-from-source.yml
  when: >-
    qt_install_from_src and
    (qt_src_force_install or
      qt_check_result.rc != 0 or
      (qt_check_result.rc == 0 and qt_check_result.stdout != qt_src_version))

- include_tasks: install-qt-from-apt.yml
  when: >-
    ansible_os_family == 'Debian' and not
    qt_install_from_src and
    (qt_check_result.rc != 0 or
      (qt_check_result.rc == 0 and qt_check_result.stdout != qt_src_version))

- name: Install PyQt from source
  block:
    - include_tasks: remove-pyqt-from-pip.yml
    - include_tasks: install-pyqt-from-source.yml
  when: >-
    pyqt_install_from_src and
    (pyqt_src_force_install or
      pyqt_check_result.rc != 0 or
      (pyqt_check_result.rc == 0 and pyqt_check_result.stdout != pyqt_src_version))

- include_tasks: install-pyqt-from-pip.yml
  when: >-
    not pyqt_install_from_src and
    (pyqt_check_result.rc != 0 or
      (pyqt_check_result.rc == 0 and pyqt_check_result.stdout != pyqt_src_version))
