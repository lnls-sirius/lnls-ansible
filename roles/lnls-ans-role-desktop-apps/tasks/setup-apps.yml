---
- name: Get Desktop folder details
  stat:
    path: "/home/{{ item.name }}/Desktop"
  register: desktop_folder_details
  with_items:
    - "{{ users }}"

- name: Print Desktop path stat
  debug:
    msg: "Desktop path stat: {{ item.stat }}"
  with_items:
    - "{{ desktop_folder_details.results }}"

# This depends on the User's role. As the user module will not update the user
# directory with the /etc/skel contents if it's already created, just copy them
# manually
- name: Ensure files are copied to each user's home
  copy:
    src: "skel/"
    dest: "/home/{{ item.name }}"
    owner: "{{ item.name | default(omit) }}"
    group: "{{ item.name | default(omit) }}"
    mode: 0755
  with_items:
    - "{{ users }}"

# Copy all template files to all users
- name: Ensure templates are copied to each user's home
  template:
    src: "{{ item.1 }}"
    dest: "/home/{{ item.0.name }}/Desktop/{{ item.1 | basename | regex_replace('.j2','') }}"
    mode: preserve
  with_nested:
    - "{{ users }}"
    - "{{ lookup('fileglob', '../templates/skel/Desktop/*.j2').split(',') }}"

- name: Install VNC server config files
  template:
    src: "{{ item.filename }}.j2"
    dest: "{{ item.pathname }}/{{ item.filename }}"
    owner: root
    group: root
    force: true
    mode: 0644
  become: true
  with_items:
    - "{{ desktop_vnc_config_files }}"
  when: apt_result is success
  notify: Restart VNC server systemd services

- name: "Create the remote /home/{{ desktop_vnc_user }}/.vnc directory"
  file:
    path: "/home/{{ desktop_vnc_user }}/.vnc"
    owner: "{{ desktop_vnc_user }}"
    group: "{{ desktop_vnc_user }}"
    mode: 0755
    state: directory
  notify: Restart VNC server systemd services

- name: "Set VNC server password for {{ desktop_vnc_user }}"
  shell: |
    set -o pipefail
    echo {{ desktop_vnc_pass }} | vncpasswd -f > /home/{{ desktop_vnc_user }}/.vnc/passwd
  args:
    executable: /bin/bash
    creates: "/home/{{ desktop_vnc_user }}/.vnc/passwd"
  no_log: true
  when: desktop_vnc_passwd_create
  notify: Restart VNC server systemd services

- name: "Change permissions to 600 for /home/{{ desktop_vnc_user }}/.vnc/passwd"
  file:
    path: "/home/{{ desktop_vnc_user }}/.vnc/passwd"
    owner: "{{ desktop_vnc_user }}"
    group: "{{ desktop_vnc_user }}"
    mode: 0600
  when: desktop_vnc_passwd_create
  notify: Restart VNC server systemd services

- name: Enable VNC server systemd service
  systemd:
    name: "{{ item.name }}"
    state: started
    enabled: "{{ item.enabled | default(true) }}"
    daemon_reload: "{{ item.daemon_reload | default(true) }}"
  become: true
  register: systemd_enable
  ignore_errors: "{{ desktop_vnc_ignore_systemd_errors }}"
  with_items:
    - "{{ desktop_vnc_server_services }}"

- name: Show warning to user if systemd fails
  pause:
    seconds: 1
    echo: false
    prompt: "Could not enable VNC systemd service. Probably running in Docker? Continuing anyway ..."
  when: item is failed
  with_items:
    - "{{ systemd_enable.results }}"
