---
- name: Resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      ignore_errors: true
      paths:
        - '{{ role_path }}/vars'

- name: Define EPICS MCA packages
  set_fact:
    epics_mca_packages: "{{ __epics_mca_packages | list }}"
  when: epics_mca_packages is not defined

# Combine apps to install
- name: Create list of dict apps to install
  set_fact:
    epics_mca_apps: "{{ epics_mca_apps | default([]) |
            list + lookup('vars', item) }}"
  with_items:
    - "{{ epics_mca_apps_install_categories | default([]) | list }}"

- name: Default variable to empty
  set_fact:
    epics_mca_apps: "[]"
  when:
    - epics_mca_apps is not defined

- name: Debug
  debug:
    msg: "EPICA MCA apps to install: {{ epics_mca_apps }}"

# Setup/install tasks
- include_tasks: setup-Debian.yml
  when:
    - ansible_os_family == 'Debian'

- include_tasks: setup-RedHat.yml
  when:
    - ansible_os_family == 'RedHat'

# Install EPICS MCA
- include_tasks: setup-epics-mca.yml
